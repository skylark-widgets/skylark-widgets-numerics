{"version":3,"sources":["skylark-widgets-medias.js"],"names":[],"mappingsfile":"../skylark-widgets-medias.js","sourcesContent":["define('skylark-widgets-medias/numerics',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark) {\r\n\tvar numerics = {};\r\n\r\n\treturn skylark.attach(\"widgets.numerics\",numerics);\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-medias/NumberBox',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(Widget,numerics){\r\n\t//TODO r20200514 lwf\r\n\t\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Number input element.\r\n\t * \r\n\t * @class NumberBox\r\n\t * @extends {Component}\r\n\t * @param {Component} parent Parent element.\r\n\t */\r\n\tvar NumberBox = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"input\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.type = \"number\";\r\n\t\t\tthis._elm.step = \"0.1\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.boxColor;\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.outline = \"none\";\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.textIndent = \"4px\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.boxShadow = \"none\";\r\n\t\t\tthis._elm.style.MozAppearance = \"textfield\";\r\n\t\t\tthis._elm.style.webkitAppearance = \"caret\";\r\n\t\t\tthis._elm.style.appearance = \"textfield\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the disabled state of the element.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {Boolean} disabled\r\n\t\t */\r\n\t\tsetDisabled : function(disabled) {\r\n\t\t\tthis._elm.disabled = disabled;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number range.\r\n\t\t *\r\n\t\t * @methos setRange\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t\tthis._elm.min = String(min);\r\n\t\t\tthis._elm.max = String(max);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number step.\r\n\t\t *\r\n\t\t * @method setStep\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetStep : function(value) {\r\n\t\t\tthis._elm.step = String(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis._elm.onchange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetValue : function(value) \t{\r\n\t\t\tthis._elm.value = value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @return {Object} Value stored in the input element.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn Number.parseFloat(this._elm.value);\r\n\t\t},\r\n\r\n\t\t_updateVisibility : function() \t{\r\n\t\t\tthis._elm.style.visibility = this.visible ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.NumberBox = NumberBox;\r\n});\ndefine('skylark-widgets-medias/NumberRow',[\n\t\"skylark-widgets-base/Widget\",\n\t\"skylark-widgets-texts/StaticText\",\n\t\"./numerics\",\n\t\"./NumberBox\"\n],function(Widget,StaticText,numerics,NumberBox){\n\t\"use strict\";\n\n\t/**\n\t * The vector array box represents multiple numeric variables as a vector.\n\t *\n\t * @class NumberRow\n\t * @extends {Widget}\n\t */\n\tvar NumberBox = Widget.inherit({\n\n\t\t_construct : function (parent) {\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\n\n\t\t\t/**\n\t\t\t * Array with the values objects.\n\t\t\t *\n\t\t\t * Each value object is composed of {label:label, input:input}\n\t\t\t *\n\t\t\t * @attribute values\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tthis.values = [];\n\n\t\t\t/**\n\t\t\t * Label size in px.\n\t\t\t *\n\t\t\t * @attribute labelSize\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.labelSize = 15;\n\t\t},\n\n\t\t/**\n\t\t * Set the values step.\n\t\t *\n\t\t * @method setStep\n\t\t * @param {Number} value\n\t\t */\n\t\tsetStep : function(value) {\n\t\t\tvar value = String(value);\n\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\n\t\t\t\tthis.values[i].input.setStep(value);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Set the values range\n\t\t *\n\t\t * @method setRange\n\t\t * @param {Number} min\n\t\t * @param {Number} max\n\t\t */\n\t\tsetRange : function(min, max) {\n\t\t \tvar min = String(min);\n\t\t \tvar max = String(max);\n\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\n\t\t\t\tthis.values[i].input.setRange(min, max);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add value to the box\n\t\t *\n\t\t * @method addValue\n\t\t * @param {String} label Label of de attribute.\n\t\t * @return {NumberBox} The input number box created for this value.\n\t\t */\n\t\taddValue : function(label) {\n\t\t\tvar input = new NumberBox(this);\n\n\t\t\tvar text = new StaticText(this);\n\t\t\ttext.setText(label);\t\n\n\t\t\tthis.values.push({\n\t\t\t\tlabel: text,\n\t\t\t\tinput: input\n\t\t\t});\n\n\t\t\treturn input;\n\t\t},\n\n\t\t_updateSize : function() {\n\t\t\tWidget.prototype._updateSize.call(this);\n\t\t\t\n\t\t\tvar width = Math.round((this.size.x - this.values.length * this.labelSize) / this.values.length);\n\t\t\tvar x = 0;\n\t\t\t\n\t\t\tfor(var i = 0; i < this.values.length; i++)\n\t\t\t{\n\t\t\t\tvar label = this.values[i].label;\n\t\t\t\tlabel.position.set(x, 0);\n\t\t\t\tlabel.size.set(this.labelSize, this.size.y);\n\t\t\t\tlabel.updateInterface();\n\n\t\t\t\tvar input = this.values[i].input;\n\t\t\t\tinput.position.set(x + this.labelSize, 0);\n\t\t\t\tinput.size.set(width, this.size.y);\n\t\t\t\tinput.updateInterface();\n\n\t\t\t\tx += width + this.labelSize;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn numerics.NumberRow = NumberRow;\n});\ndefine('skylark-widgets-medias/Slider',[\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(eventer,Widget,numerics){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Slider widget is used to select a numeric value using a visual slider bar.\r\n\t * \r\n\t * @class Slider\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\tvar Slider = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.call(this, parent, \"div\");\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createElement(\"div\");\r\n\t\t\tthis.text.style.position = \"absolute\";\r\n\t\t\tthis.text.style.display = \"none\";\r\n\t\t\tthis.text.style.justifyContent = \"center\";\r\n\t\t\tthis.text.style.alignItems = \"center\";\r\n\t\t\tthis.text.style.zIndex = \"10000\";\r\n\t\t\tthis.text.style.border = \"3px solid\";\r\n\t\t\tthis.text.style.borderRadius = \"5px\";\r\n\r\n\t\t\t//this.text.style.color = Editor.theme.textColor;\r\n\t\t\t//this.text.style.backgroundColor = Editor.theme.barColor;\r\n\t\t\t//this.text.style.borderColor = Editor.theme.barColor;\t\r\n\t\t\tthis.text.style.color = skin.textColor;\r\n\t\t\tthis.text.style.backgroundColor = skin.barColor;\r\n\t\t\tthis.text.style.borderColor = skin.barColor;\t\r\n\r\n\t\t\tdocument.body.appendChild(this.text);\r\n\r\n\t\t\t//Text value\r\n\t\t\tthis.textValue = document.createTextNode(\"\");\r\n\t\t\tthis.text.appendChild(this.textValue);\r\n\r\n\t\t\t//Mouse mouse move event\r\n\t\t\tthis._elm.onmousemove = function(event)\r\n\t\t\t{\r\n\t\t\t\tself.text.style.display = \"flex\";\r\n\t\t\t\tself.text.style.width = \"fit-content\";\r\n\t\t\t\tself.text.style.height = \"fit-content\";\r\n\t\t\t\tself.text.style.left = event.clientX + \"px\";\r\n\t\t\t\tself.text.style.top = (event.clientY - 30) + \"px\";\r\n\t\t\t};\r\n\r\n\t\t\t//Mouse out event\r\n\t\t\tthis._elm.onmouseout = function()\r\n\t\t\t{\r\n\t\t\t\tself.text.style.display = \"none\";\r\n\t\t\t};\r\n\r\n\t\t\t//Track\r\n\t\t\tthis.track = document.createElement(\"div\");\r\n\t\t\tthis.track.style.position = \"absolute\";\r\n\t\t\t//this.track.style.backgroundColor = Editor.theme.audioTrack;\r\n\t\t\tthis.track.style.backgroundColor = skin.audioTrack;\r\n\t\t\tthis.track.style.cursor = \"pointer\";\r\n\t\t\tthis.track.style.left = \"0px\";\r\n\t\t\tthis.track.style.width = \"100%\";\r\n\t\t\tthis.track.style.top = \"25%\";\r\n\t\t\tthis.track.style.height = \"50%\";\r\n\t\t\tthis._elm.appendChild(this.track);\r\n\r\n\t\t\t//Progress\r\n\t\t\tthis.progress = document.createElement(\"div\");\r\n\t\t\tthis.progress.style.pointerEvents = \"none\";\r\n\t\t\tthis.progress.style.position = \"absolute\";\r\n\t\t\t//this.progress.style.backgroundColor = Editor.theme.audioProgress;\r\n\t\t\tthis.progress.style.backgroundColor = skin.audioProgress;\r\n\t\t\tthis.progress.style.height = \"100%\";\r\n\t\t\tthis.track.appendChild(this.progress);\r\n\r\n\t\t\t//Scrubber\r\n\t\t\tthis.scrubber = document.createElement(\"div\");\r\n\t\t\tthis.scrubber.style.position = \"absolute\";\r\n\t\t\t//this.scrubber.style.backgroundColor = Editor.theme.audioScrubber;\r\n\t\t\tthis.scrubber.style.backgroundColor = skin.audioScrubber;\r\n\t\t\tthis.scrubber.style.cursor = \"pointer\";\r\n\t\t\tthis.scrubber.style.height = \"160%\";\r\n\t\t\tthis.scrubber.style.top = \"-25%\";\r\n\t\t\tthis.scrubber.style.width = \"6px\";\r\n\t\t\tthis.track.appendChild(this.scrubber);\r\n\r\n\t\t\t/**\r\n\t\t\t * Value stored in the slider.\r\n\t\t\t *\r\n\t\t\t * @property value\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.value = 0.0;\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t//Range\r\n\t\t\tthis.min = 1.0;\r\n\t\t\tthis.max = 2.0;\r\n\t\t\tthis.step = null;\r\n\r\n\t\t\t//Drag control\r\n\t\t\tthis.mouseStart = 0;\r\n\t\t\tthis.valueStart = 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * Event manager to handle window events.\r\n\t\t\t *\r\n\t\t\t * @property manager\r\n\t\t\t * @type {EventManager}\r\n\t\t\t */\r\n\t\t\t//this.manager = new EventManager();\r\n\t\t\t//this.manager.add(window, \"mousemove\", function(event)\r\n\t\t\teventer.on(widnow,\"mousemove\", function(event)\r\n\t\t\t{\r\n\t\t\t\tvar delta = (event.pageX - self.mouseStart) / (self.size.x);\r\n\t\t\t\tvar value = self.valueStart + delta * (self.max - self.min);\r\n\t\t\t\tself.setValue(value);\r\n\r\n\t\t\t\tif (self.onChange !== null) {\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//this.manager.add(window, \"mouseup\", function(event)\r\n\t\t\teventer.on(window, \"mouseup\", function(event)\r\n\t\t\t{\t\r\n\t\t\t\t//self.manager.destroy();\r\n\t\t\t});\r\n\r\n\t\t\tthis.scrubber.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t\tself.mouseStart = event.pageX;\r\n\t\t\t\tself.valueStart = self.value;\r\n\t\t\t\tself.manager.create();\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t};\r\n\r\n\t\t\tthis.track.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t\tvar percentage = (event.layerX / self.size.x);\r\n\r\n\t\t\t\tself.setValue(percentage * (self.max - self.min) + self.min);\r\n\t\t\t\tself.progress.style.width = (percentage * 100) + \"%\";\r\n\t\t\t\tself.scrubber.style.left = self.progress.style.width;\r\n\t\t\t\tself.scrubber.onmousedown(event);\r\n\r\n\t\t\t\tif(self.onChange !== null) {\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set if widget is disabled.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {Boolean} value.\r\n\t\t */\r\n\t\tsetDisabled : function(value) {\r\n\t\t\t//TODO\r\n\t\t},\r\n\r\n\t\t//Set slider min step\r\n\t\tsetStep : function(step) {\r\n\t\t\tthis.step = step;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value range of the slider.\r\n\t\t *\r\n\t\t * @method setRange.\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t\tthis.min = min;\r\n\t\t\tthis.max = max;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * Set onchange callback.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t * @param {String} name Graph name.\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis.onChange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set Slider value.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetValue : function(value) {\r\n\t\t\tif(value < this.min) {\r\n\t\t\t\tvalue = this.min;\r\n\t\t\t} else if(value > this.max) {\r\n\t\t\t\tvalue = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.step !== null) {\r\n\t\t\t\tvar remainder = value % this.step;\r\n\r\n\t\t\t\tvalue -= remainder;\r\n\t\t\t\tif(remainder > this.step / 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue += this.step;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Check for precision problems\r\n\t\t\t\tvar stepVal = String(this.step).split(\".\");\r\n\t\t\t\tif(stepVal.length > 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar precision = stepVal[1].length;\r\n\t\t\t\t\tvar values = String(value).split(\".\");\r\n\t\t\t\t\tif(values.length > 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue = Number.parseFloat(values[0] + \".\" + values[1].substr(0, precision));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.value = value;\r\n\t\t\tthis._updateValue();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get Slider value.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Number} Value of the slider.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn this.value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the DOM elements to represent the value.\r\n\t\t *\r\n\t\t * @method updateValue\r\n\t\t */\r\n\t\t_updateValue : function() {\r\n\t\t\tvar progress = ((this.value - this.min) / (this.max - this.min)) * 100;\r\n\r\n\t\t\tthis.progress.style.width = progress + \"%\";\r\n\t\t\tthis.scrubber.style.left = progress + \"%\";\r\n\t\t\tthis.textValue.data = this.value;\r\n\t\t},\r\n\r\n\t\tdestroy : function() {\r\n\t\t\tWidget.prototype.destroy.call(this);\r\n\t\t\t\r\n\t\t\tif(document.body.contains(this.text))\r\n\t\t\t{\r\n\t\t\t\tdocument.body.removeChild(this.text);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.Slider = Slider;\r\n});\ndefine('skylark-widgets-medias/VectorBox',[\n\t\"skylark-widgets-base/Widget\",\n\t\"./numerics\"\n],function(Widget,numerics){\n\n\t//TODO r20200514 lwf\n\t\n\t\"use strict\";\n\n\t/**\n\t * The vector box is used to represent Vector2, Vector3, Vector4 and Euler values.\n\t *\n\t * @class VectorBox\n\t * @extends {Widget}\n\t */\n\tvar NumberBox = Widget.inherit({\n\n\t\t_construct : function (parent) {\n\t\t\tWidget.call(this, parent, \"div\");\n\n\t\t\t//X Text\n\t\t\tthis.xText = document.createElement(\"div\");\n\t\t\tthis.xText.style.position = \"absolute\";\n\t\t\tthis.xText.style.width = \"15px\";\n\t\t\tthis.xText.style.textAlign = \"center\";\n\t\t\tthis.xText.style.verticalAlign = \"middle\";\n\t\t\tthis.xText.appendChild(document.createTextNode(\"X\"));\n\t\t\tthis._elm.appendChild(this.xText);\n\n\t\t\tfunction createInput()\n\t\t\t{\n\t\t\t\tvar input = document.createElement(\"input\");\n\t\t\t\tinput.type = \"number\";\n\t\t\t\tinput.style.backgroundColor = Editor.theme.boxColor;\n\t\t\t\tinput.style.color = Editor.theme.textColor;\n\t\t\t\tinput.style.borderStyle = \"none\";\n\t\t\t\tinput.style.position = \"absolute\";\n\t\t\t\tinput.style.boxSizing = \"border-box\";\n\t\t\t\tinput.style.textIndent = \"4px\";\n\t\t\t\tinput.style.borderRadius = \"4px\";\n\t\t\t\tinput.style.outline = \"none\";\n\t\t\t\tinput.style.MozAppearance = \"textfield\";\n\t\t\t\tinput.style.webkitAppearance = \"caret\";\n\t\t\t\tinput.style.appearance = \"textfield\";\n\t\t\t\treturn input;\n\t\t\t}\n\n\t\t\t//X\n\t\t\tthis.x = createInput();\n\t\t\tthis.x.style.left = \"15px\";\n\t\t\tthis._elm.appendChild(this.x);\n\n\t\t\t//Y Text\n\t\t\tthis.yText = document.createElement(\"div\");\n\t\t\tthis.yText.style.position = \"absolute\";\n\t\t\tthis.yText.style.width = \"15px\";\n\t\t\tthis.yText.style.textAlign = \"center\";\n\t\t\tthis.yText.style.verticalAlign = \"middle\";\n\t\t\tthis.yText.appendChild(document.createTextNode(\"Y\"));\n\t\t\tthis._elm.appendChild(this.yText);\n\n\t\t\t//Y\n\t\t\tthis.y = createInput();\n\t\t\tthis._elm.appendChild(this.y);\n\n\t\t\t//Z Text\n\t\t\tthis.zText = document.createElement(\"div\");\n\t\t\tthis.zText.style.position = \"absolute\";\n\t\t\tthis.zText.style.width = \"15px\";\n\t\t\tthis.zText.style.textAlign = \"center\";\n\t\t\tthis.zText.style.verticalAlign = \"middle\";\n\t\t\tthis.zText.appendChild(document.createTextNode(\"Z\"));\n\t\t\tthis._elm.appendChild(this.zText);\n\n\t\t\t//Z\n\t\t\tthis.z = createInput();\n\t\t\tthis._elm.appendChild(this.z);\n\n\t\t\t//W Text\n\t\t\tthis.wText = document.createElement(\"div\");\n\t\t\tthis.wText.style.position = \"absolute\";\n\t\t\tthis.wText.style.width = \"15px\";\n\t\t\tthis.wText.style.textAlign = \"center\";\n\t\t\tthis.wText.style.verticalAlign = \"middle\";\n\t\t\tthis.wText.appendChild(document.createTextNode(\"W\"));\n\t\t\tthis._elm.appendChild(this.wText);\n\n\t\t\t//W\n\t\t\tthis.w = createInput();\n\t\t\tthis._elm.appendChild(this.w);\n\n\t\t\t//Order\n\t\t\tthis.order = \"XYZ\";\n\t\t\tthis.type = VectorBox.VECTOR3;\n\t\t},\n\n\n\t\t/**\n\t\t * Set the type of box, (type of data to use).\n\t\t *  - VectorBox.VECTOR2\n\t\t *  - VectorBox.VECTOR3\n\t\t *  - VectorBox.QUATERNION\n\t\t *\n\t\t * @method setType\n\t\t * @param {Number} type\n\t\t */\n\t\tsetType : function(type){\n\t\t\tif(this.type !== type){\n\t\t\t\tthis.type = type;\n\t\t\t\tthis._updateInterface();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Set the values step.\n\t\t *\n\t\t * @method setStep\n\t\t * @param {Number} value\n\t\t */\n\t\tsetStep : function(value){\n\t\t\tvar value = String(value);\n\t\t\tthis.x.step = value;\n\t\t\tthis.y.step = value;\n\t\t\tthis.z.step = value;\n\t\t\tthis.w.step = value;\n\t\t},\n\n\t\t/**\n\t\t * Set the values range\n\t\t *\n\t\t * @method setRange\n\t\t * @param {Number} min\n\t\t * @param {Number} max\n\t\t */\n\t\tsetRange : function(min, max){\n\t\t \tvar min = String(min);\n\t\t \tvar max = String(max);\n\t\t\tthis.x.min = min;\n\t\t\tthis.x.max = max;\n\t\t\tthis.y.min = min;\n\t\t\tthis.y.max = max;\n\t\t\tthis.z.min = min;\n\t\t\tthis.z.max = max;\n\t\t\tthis.w.min = min;\n\t\t\tthis.w.max = max;\t\n\t\t},\n\n\t\t/**\n\t\t * Get a value from the box.\n\t\t *\n\t\t * @method getValue\n\t\t * @return {Object} Value stored.\n\t\t */\n\t\tgetValue : function() {\n\t\t\treturn {x: parseFloat(this.x.value), y: parseFloat(this.y.value), z: parseFloat(this.z.value), w: parseFloat(this.w.value), order: this.order};\n\t\t},\n\n\t\t/**\n\t\t * Set value to the vector box.\n\t\t *\n\t\t * @method setValue\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} z\n\t\t * @param {Number} w\n\t\t * @param {Object} value Value\n\t\t */\n\t\tsetValue : function(x, y, z, w) {\n\t\t\tif(x.isVector2) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.setType(VectorBox.VECTOR2);\n\t\t\t} else if(x.isVector3) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.z.value = x.z;\n\t\t\t\tthis.setType(VectorBox.VECTOR3);\n\t\t\t} else if(x.isEuler) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.z.value = x.z;\n\t\t\t\tthis.order = x.order;\n\t\t\t\tthis.setType(VectorBox.VECTOR3);\n\t\t\t} else if(x.isQuaternion) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.z.value = x.z;\n\t\t\t\tthis.w.value = x.w;\n\t\t\t\tthis.setType(VectorBox.QUATERNION);\n\t\t\t} else \t{\n\t\t\t\tthis.x.value = x;\n\t\t\t\tthis.y.value = y;\n\t\t\t\tthis.z.value = (z !== undefined) ? z : 0;\n\t\t\t\tthis.w.value = (w !== undefined) ? w : 0;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Set onchange callback, called after changes.\n\t\t *\n\t\t * @method setOnChange\n\t\t * @param {Function} onChange\n\t\t */\n\t\tsetOnChange : function(onChange) {\n\t\t\tthis.x.onchange = onChange;\n\t\t\tthis.y.onchange = onChange;\n\t\t\tthis.z.onchange = onChange;\n\t\t\tthis.w.onchange = onChange;\n\t\t},\n\n\t\t_updateSize : function() {\n\t\t\tWidget.prototype._updateSize.call(this);\n\t\t\t\n\t\t\tvar sizeX = Math.round((this.size.x - this.type * 15) / this.type);\n\t\t\tvar sizeY = this.size.y + \"px\";\n\n\t\t\tthis.xText.style.height = sizeY;\n\t\t\tthis.xText.style.lineHeight = sizeY;\n\t\t\tthis.x.style.width = sizeX + \"px\";\n\n\t\t\tthis.yText.style.left = (15 + sizeX) + \"px\";\n\t\t\tthis.yText.style.height = sizeY;\n\t\t\tthis.yText.style.lineHeight = sizeY;\n\t\t\tthis.y.style.left = (30 + sizeX) + \"px\";\n\t\t\tthis.y.style.width = sizeX + \"px\";\n\n\t\t\tif(this.type >= VectorBox.VECTOR3){\n\t\t\t\tthis.zText.style.left = (30 + (2 * sizeX)) + \"px\";\n\t\t\t\tthis.zText.style.height = sizeY;\n\t\t\t\tthis.zText.style.lineHeight = sizeY;\n\t\t\t\tthis.z.style.left = (45 + (2 * sizeX)) + \"px\";\n\t\t\t\tthis.z.style.width = sizeX + \"px\";\n\n\t\t\t\tif(this.type === VectorBox.QUATERNION){\n\t\t\t\t\tthis.wText.style.left = (45 + (3 * sizeX)) + \"px\";\n\t\t\t\t\tthis.wText.style.height = sizeY;\n\t\t\t\t\tthis.wText.style.lineHeight = sizeY;\n\t\t\t\t\tthis.w.style.left = (60 + (3 * sizeX)) + \"px\";\n\t\t\t\t\tthis.w.style.width = sizeX + \"px\";\n\n\t\t\t\t\tthis.zText.style.visibility = \"visible\";\n\t\t\t\t\tthis.z.style.visibility = \"visible\";\n\t\t\t\t\tthis.w.style.visibility = \"visible\";\n\t\t\t\t\tthis.wText.style.visibility = \"visible\";\n\t\t\t\t}else{\n\t\t\t\t\tthis.zText.style.visibility = \"visible\";\n\t\t\t\t\tthis.z.style.visibility = \"visible\";\n\t\t\t\t\tthis.w.style.visibility = \"hidden\";\n\t\t\t\t\tthis.wText.style.visibility = \"hidden\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.z.style.visibility = \"hidden\";\n\t\t\t\tthis.zText.style.visibility = \"hidden\";\n\t\t\t\tthis.w.style.visibility = \"hidden\";\n\t\t\t\tthis.wText.style.visibility = \"hidden\";\n\t\t\t}\n\t\t}\n\t});\n\n\tVectorBox.VECTOR2 = 2;\n\tVectorBox.VECTOR3 = 3;\n\tVectorBox.QUATERNION = 4;\n\n\treturn numerics.VectorBox = VectorBox;\n});\ndefine('skylark-widgets-medias/main',[\r\n\t\"./numerics\",\r\n\t\"./NumberBox\",\r\n\t\"./NumberRow\",\r\n\t\"./Slider\",\r\n\t\"./VectorBox\"\r\n],function(numerics){\r\n\treturn numerics;\r\n});\ndefine('skylark-widgets-medias', ['skylark-widgets-medias/main'], function (main) { return main; });\n\n"]}