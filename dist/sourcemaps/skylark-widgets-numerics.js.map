{"version":3,"sources":["skylark-widgets-numerics.js"],"names":["define","skylark","attach","Widget","numerics","NumberBox","inherit","_construct","parent","prototype","call","this","skin","getSkin","_elm","type","step","style","backgroundColor","boxColor","color","textColor","outline","borderStyle","boxSizing","textIndent","borderRadius","boxShadow","MozAppearance","webkitAppearance","appearance","setDisabled","disabled","setRange","min","max","String","setStep","value","setOnChange","onChange","onchange","setValue","getValue","Number","parseFloat","_updateVisibility","visibility","visible","TextPane","NumberRow","values","labelSize","i","length","input","addValue","label","text","setText","push","_updateSize","width","Math","round","size","x","position","set","y","updateInterface","eventer","Slider","overflow","self","document","createElement","display","justifyContent","alignItems","zIndex","border","barColor","borderColor","body","appendChild","textValue","createTextNode","onmousemove","event","height","left","clientX","top","clientY","onmouseout","track","audioTrack","cursor","progress","pointerEvents","audioProgress","scrubber","audioScrubber","mouseStart","valueStart","on","window","delta","pageX","onmousedown","manager","create","stopPropagation","percentage","layerX","remainder","stepVal","split","precision","substr","_updateValue","data","destroy","contains","removeChild","VectorBox","createInput","Editor","theme","xText","textAlign","verticalAlign","yText","zText","z","wText","w","order","VECTOR3","setType","isVector2","VECTOR2","isVector3","isEuler","isQuaternion","QUATERNION","undefined","sizeX","sizeY","lineHeight","main"],"mappings":"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","file":"../skylark-widgets-numerics.js","sourcesContent":["define('skylark-widgets-numerics/numerics',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark) {\r\n\tvar numerics = {};\r\n\r\n\treturn skylark.attach(\"widgets.numerics\",numerics);\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-numerics/NumberBox',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(Widget,numerics){\r\n\t//TODO r20200514 lwf\r\n\t\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Number input element.\r\n\t * \r\n\t * @class NumberBox\r\n\t * @extends {Component}\r\n\t * @param {Component} parent Parent element.\r\n\t */\r\n\tvar NumberBox = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"input\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.type = \"number\";\r\n\t\t\tthis._elm.step = \"0.1\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.boxColor;\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.outline = \"none\";\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.textIndent = \"4px\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.boxShadow = \"none\";\r\n\t\t\tthis._elm.style.MozAppearance = \"textfield\";\r\n\t\t\tthis._elm.style.webkitAppearance = \"caret\";\r\n\t\t\tthis._elm.style.appearance = \"textfield\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the disabled state of the element.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {Boolean} disabled\r\n\t\t */\r\n\t\tsetDisabled : function(disabled) {\r\n\t\t\tthis._elm.disabled = disabled;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number range.\r\n\t\t *\r\n\t\t * @methos setRange\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t\tthis._elm.min = String(min);\r\n\t\t\tthis._elm.max = String(max);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number step.\r\n\t\t *\r\n\t\t * @method setStep\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetStep : function(value) {\r\n\t\t\tthis._elm.step = String(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis._elm.onchange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetValue : function(value) \t{\r\n\t\t\tthis._elm.value = value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @return {Object} Value stored in the input element.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn Number.parseFloat(this._elm.value);\r\n\t\t},\r\n\r\n\t\t_updateVisibility : function() \t{\r\n\t\t\tthis._elm.style.visibility = this.visible ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.NumberBox = NumberBox;\r\n});\ndefine('skylark-widgets-numerics/NumberRow',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"skylark-widgets-base/TextPane\",\r\n\t\"./numerics\",\r\n\t\"./NumberBox\"\r\n],function(Widget,TextPane,numerics,NumberBox){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * The vector array box represents multiple numeric variables as a vector.\r\n\t *\r\n\t * @class NumberRow\r\n\t * @extends {Widget}\r\n\t */\r\n\tvar NumberRow = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t/**\r\n\t\t\t * Array with the values objects.\r\n\t\t\t *\r\n\t\t\t * Each value object is composed of {label:label, input:input}\r\n\t\t\t *\r\n\t\t\t * @attribute values\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Label size in px.\r\n\t\t\t *\r\n\t\t\t * @attribute labelSize\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.labelSize = 15;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the values step.\r\n\t\t *\r\n\t\t * @method setStep\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetStep : function(value) {\r\n\t\t\tvar value = String(value);\r\n\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\r\n\t\t\t\tthis.values[i].input.setStep(value);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the values range\r\n\t\t *\r\n\t\t * @method setRange\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t \tvar min = String(min);\r\n\t\t \tvar max = String(max);\r\n\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\r\n\t\t\t\tthis.values[i].input.setRange(min, max);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add value to the box\r\n\t\t *\r\n\t\t * @method addValue\r\n\t\t * @param {String} label Label of de attribute.\r\n\t\t * @return {NumberBox} The input number box created for this value.\r\n\t\t */\r\n\t\taddValue : function(label) {\r\n\t\t\tvar input = new NumberBox(this);\r\n\r\n\t\t\tvar text = new TextPane(this);\r\n\t\t\ttext.setText(label);\t\r\n\r\n\t\t\tthis.values.push({\r\n\t\t\t\tlabel: text,\r\n\t\t\t\tinput: input\r\n\t\t\t});\r\n\r\n\t\t\treturn input;\r\n\t\t},\r\n\r\n\t\t_updateSize : function() {\r\n\t\t\tWidget.prototype._updateSize.call(this);\r\n\t\t\t\r\n\t\t\tvar width = Math.round((this.size.x - this.values.length * this.labelSize) / this.values.length);\r\n\t\t\tvar x = 0;\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar label = this.values[i].label;\r\n\t\t\t\tlabel.position.set(x, 0);\r\n\t\t\t\tlabel.size.set(this.labelSize, this.size.y);\r\n\t\t\t\tlabel.updateInterface();\r\n\r\n\t\t\t\tvar input = this.values[i].input;\r\n\t\t\t\tinput.position.set(x + this.labelSize, 0);\r\n\t\t\t\tinput.size.set(width, this.size.y);\r\n\t\t\t\tinput.updateInterface();\r\n\r\n\t\t\t\tx += width + this.labelSize;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.NumberRow = NumberRow;\r\n});\ndefine('skylark-widgets-numerics/Slider',[\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(eventer,Widget,numerics){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Slider widget is used to select a numeric value using a visual slider bar.\r\n\t * \r\n\t * @class Slider\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\tvar Slider = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createElement(\"div\");\r\n\t\t\tthis.text.style.position = \"absolute\";\r\n\t\t\tthis.text.style.display = \"none\";\r\n\t\t\tthis.text.style.justifyContent = \"center\";\r\n\t\t\tthis.text.style.alignItems = \"center\";\r\n\t\t\tthis.text.style.zIndex = \"10000\";\r\n\t\t\tthis.text.style.border = \"3px solid\";\r\n\t\t\tthis.text.style.borderRadius = \"5px\";\r\n\r\n\t\t\t//this.text.style.color = Editor.theme.textColor;\r\n\t\t\t//this.text.style.backgroundColor = Editor.theme.barColor;\r\n\t\t\t//this.text.style.borderColor = Editor.theme.barColor;\t\r\n\t\t\tthis.text.style.color = skin.textColor;\r\n\t\t\tthis.text.style.backgroundColor = skin.barColor;\r\n\t\t\tthis.text.style.borderColor = skin.barColor;\t\r\n\r\n\t\t\tdocument.body.appendChild(this.text);\r\n\r\n\t\t\t//Text value\r\n\t\t\tthis.textValue = document.createTextNode(\"\");\r\n\t\t\tthis.text.appendChild(this.textValue);\r\n\r\n\t\t\t//Mouse mouse move event\r\n\t\t\tthis._elm.onmousemove = function(event)\r\n\t\t\t{\r\n\t\t\t\tself.text.style.display = \"flex\";\r\n\t\t\t\tself.text.style.width = \"fit-content\";\r\n\t\t\t\tself.text.style.height = \"fit-content\";\r\n\t\t\t\tself.text.style.left = event.clientX + \"px\";\r\n\t\t\t\tself.text.style.top = (event.clientY - 30) + \"px\";\r\n\t\t\t};\r\n\r\n\t\t\t//Mouse out event\r\n\t\t\tthis._elm.onmouseout = function()\r\n\t\t\t{\r\n\t\t\t\tself.text.style.display = \"none\";\r\n\t\t\t};\r\n\r\n\t\t\t//Track\r\n\t\t\tthis.track = document.createElement(\"div\");\r\n\t\t\tthis.track.style.position = \"absolute\";\r\n\t\t\t//this.track.style.backgroundColor = Editor.theme.audioTrack;\r\n\t\t\tthis.track.style.backgroundColor = skin.audioTrack;\r\n\t\t\tthis.track.style.cursor = \"pointer\";\r\n\t\t\tthis.track.style.left = \"0px\";\r\n\t\t\tthis.track.style.width = \"100%\";\r\n\t\t\tthis.track.style.top = \"25%\";\r\n\t\t\tthis.track.style.height = \"50%\";\r\n\t\t\tthis._elm.appendChild(this.track);\r\n\r\n\t\t\t//Progress\r\n\t\t\tthis.progress = document.createElement(\"div\");\r\n\t\t\tthis.progress.style.pointerEvents = \"none\";\r\n\t\t\tthis.progress.style.position = \"absolute\";\r\n\t\t\t//this.progress.style.backgroundColor = Editor.theme.audioProgress;\r\n\t\t\tthis.progress.style.backgroundColor = skin.audioProgress;\r\n\t\t\tthis.progress.style.height = \"100%\";\r\n\t\t\tthis.track.appendChild(this.progress);\r\n\r\n\t\t\t//Scrubber\r\n\t\t\tthis.scrubber = document.createElement(\"div\");\r\n\t\t\tthis.scrubber.style.position = \"absolute\";\r\n\t\t\t//this.scrubber.style.backgroundColor = Editor.theme.audioScrubber;\r\n\t\t\tthis.scrubber.style.backgroundColor = skin.audioScrubber;\r\n\t\t\tthis.scrubber.style.cursor = \"pointer\";\r\n\t\t\tthis.scrubber.style.height = \"160%\";\r\n\t\t\tthis.scrubber.style.top = \"-25%\";\r\n\t\t\tthis.scrubber.style.width = \"6px\";\r\n\t\t\tthis.track.appendChild(this.scrubber);\r\n\r\n\t\t\t/**\r\n\t\t\t * Value stored in the slider.\r\n\t\t\t *\r\n\t\t\t * @property value\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.value = 0.0;\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t//Range\r\n\t\t\tthis.min = 1.0;\r\n\t\t\tthis.max = 2.0;\r\n\t\t\tthis.step = null;\r\n\r\n\t\t\t//Drag control\r\n\t\t\tthis.mouseStart = 0;\r\n\t\t\tthis.valueStart = 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * Event manager to handle window events.\r\n\t\t\t *\r\n\t\t\t * @property manager\r\n\t\t\t * @type {EventManager}\r\n\t\t\t */\r\n\t\t\t//this.manager = new EventManager();\r\n\t\t\t//this.manager.add(window, \"mousemove\", function(event)\r\n\t\t\teventer.on(window,\"mousemove\", function(event)\r\n\t\t\t{\r\n\t\t\t\tvar delta = (event.pageX - self.mouseStart) / (self.size.x);\r\n\t\t\t\tvar value = self.valueStart + delta * (self.max - self.min);\r\n\t\t\t\tself.setValue(value);\r\n\r\n\t\t\t\tif (self.onChange !== null) {\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//this.manager.add(window, \"mouseup\", function(event)\r\n\t\t\teventer.on(window, \"mouseup\", function(event)\r\n\t\t\t{\t\r\n\t\t\t\t//self.manager.destroy();\r\n\t\t\t});\r\n\r\n\t\t\tthis.scrubber.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t\tself.mouseStart = event.pageX;\r\n\t\t\t\tself.valueStart = self.value;\r\n\t\t\t\tself.manager.create();\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t};\r\n\r\n\t\t\tthis.track.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t\tvar percentage = (event.layerX / self.size.x);\r\n\r\n\t\t\t\tself.setValue(percentage * (self.max - self.min) + self.min);\r\n\t\t\t\tself.progress.style.width = (percentage * 100) + \"%\";\r\n\t\t\t\tself.scrubber.style.left = self.progress.style.width;\r\n\t\t\t\tself.scrubber.onmousedown(event);\r\n\r\n\t\t\t\tif(self.onChange !== null) {\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set if widget is disabled.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {Boolean} value.\r\n\t\t */\r\n\t\tsetDisabled : function(value) {\r\n\t\t\t//TODO\r\n\t\t},\r\n\r\n\t\t//Set slider min step\r\n\t\tsetStep : function(step) {\r\n\t\t\tthis.step = step;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value range of the slider.\r\n\t\t *\r\n\t\t * @method setRange.\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t\tthis.min = min;\r\n\t\t\tthis.max = max;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * Set onchange callback.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t * @param {String} name Graph name.\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis.onChange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set Slider value.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetValue : function(value) {\r\n\t\t\tif(value < this.min) {\r\n\t\t\t\tvalue = this.min;\r\n\t\t\t} else if(value > this.max) {\r\n\t\t\t\tvalue = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.step !== null) {\r\n\t\t\t\tvar remainder = value % this.step;\r\n\r\n\t\t\t\tvalue -= remainder;\r\n\t\t\t\tif(remainder > this.step / 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue += this.step;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Check for precision problems\r\n\t\t\t\tvar stepVal = String(this.step).split(\".\");\r\n\t\t\t\tif(stepVal.length > 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar precision = stepVal[1].length;\r\n\t\t\t\t\tvar values = String(value).split(\".\");\r\n\t\t\t\t\tif(values.length > 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue = Number.parseFloat(values[0] + \".\" + values[1].substr(0, precision));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.value = value;\r\n\t\t\tthis._updateValue();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get Slider value.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Number} Value of the slider.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn this.value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the DOM elements to represent the value.\r\n\t\t *\r\n\t\t * @method updateValue\r\n\t\t */\r\n\t\t_updateValue : function() {\r\n\t\t\tvar progress = ((this.value - this.min) / (this.max - this.min)) * 100;\r\n\r\n\t\t\tthis.progress.style.width = progress + \"%\";\r\n\t\t\tthis.scrubber.style.left = progress + \"%\";\r\n\t\t\tthis.textValue.data = this.value;\r\n\t\t},\r\n\r\n\t\tdestroy : function() {\r\n\t\t\tWidget.prototype.destroy.call(this);\r\n\t\t\t\r\n\t\t\tif(document.body.contains(this.text))\r\n\t\t\t{\r\n\t\t\t\tdocument.body.removeChild(this.text);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.Slider = Slider;\r\n});\ndefine('skylark-widgets-numerics/VectorBox',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(Widget,numerics){\r\n\r\n\t//TODO r20200514 lwf\r\n\t\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * The vector box is used to represent Vector2, Vector3, Vector4 and Euler values.\r\n\t *\r\n\t * @class VectorBox\r\n\t * @extends {Widget}\r\n\t */\r\n\tvar VectorBox = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t//X Text\r\n\t\t\tthis.xText = document.createElement(\"div\");\r\n\t\t\tthis.xText.style.position = \"absolute\";\r\n\t\t\tthis.xText.style.width = \"15px\";\r\n\t\t\tthis.xText.style.textAlign = \"center\";\r\n\t\t\tthis.xText.style.verticalAlign = \"middle\";\r\n\t\t\tthis.xText.appendChild(document.createTextNode(\"X\"));\r\n\t\t\tthis._elm.appendChild(this.xText);\r\n\r\n\t\t\tfunction createInput()\r\n\t\t\t{\r\n\t\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\t\tinput.type = \"number\";\r\n\t\t\t\tinput.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t\tinput.style.color = Editor.theme.textColor;\r\n\t\t\t\tinput.style.borderStyle = \"none\";\r\n\t\t\t\tinput.style.position = \"absolute\";\r\n\t\t\t\tinput.style.boxSizing = \"border-box\";\r\n\t\t\t\tinput.style.textIndent = \"4px\";\r\n\t\t\t\tinput.style.borderRadius = \"4px\";\r\n\t\t\t\tinput.style.outline = \"none\";\r\n\t\t\t\tinput.style.MozAppearance = \"textfield\";\r\n\t\t\t\tinput.style.webkitAppearance = \"caret\";\r\n\t\t\t\tinput.style.appearance = \"textfield\";\r\n\t\t\t\treturn input;\r\n\t\t\t}\r\n\r\n\t\t\t//X\r\n\t\t\tthis.x = createInput();\r\n\t\t\tthis.x.style.left = \"15px\";\r\n\t\t\tthis._elm.appendChild(this.x);\r\n\r\n\t\t\t//Y Text\r\n\t\t\tthis.yText = document.createElement(\"div\");\r\n\t\t\tthis.yText.style.position = \"absolute\";\r\n\t\t\tthis.yText.style.width = \"15px\";\r\n\t\t\tthis.yText.style.textAlign = \"center\";\r\n\t\t\tthis.yText.style.verticalAlign = \"middle\";\r\n\t\t\tthis.yText.appendChild(document.createTextNode(\"Y\"));\r\n\t\t\tthis._elm.appendChild(this.yText);\r\n\r\n\t\t\t//Y\r\n\t\t\tthis.y = createInput();\r\n\t\t\tthis._elm.appendChild(this.y);\r\n\r\n\t\t\t//Z Text\r\n\t\t\tthis.zText = document.createElement(\"div\");\r\n\t\t\tthis.zText.style.position = \"absolute\";\r\n\t\t\tthis.zText.style.width = \"15px\";\r\n\t\t\tthis.zText.style.textAlign = \"center\";\r\n\t\t\tthis.zText.style.verticalAlign = \"middle\";\r\n\t\t\tthis.zText.appendChild(document.createTextNode(\"Z\"));\r\n\t\t\tthis._elm.appendChild(this.zText);\r\n\r\n\t\t\t//Z\r\n\t\t\tthis.z = createInput();\r\n\t\t\tthis._elm.appendChild(this.z);\r\n\r\n\t\t\t//W Text\r\n\t\t\tthis.wText = document.createElement(\"div\");\r\n\t\t\tthis.wText.style.position = \"absolute\";\r\n\t\t\tthis.wText.style.width = \"15px\";\r\n\t\t\tthis.wText.style.textAlign = \"center\";\r\n\t\t\tthis.wText.style.verticalAlign = \"middle\";\r\n\t\t\tthis.wText.appendChild(document.createTextNode(\"W\"));\r\n\t\t\tthis._elm.appendChild(this.wText);\r\n\r\n\t\t\t//W\r\n\t\t\tthis.w = createInput();\r\n\t\t\tthis._elm.appendChild(this.w);\r\n\r\n\t\t\t//Order\r\n\t\t\tthis.order = \"XYZ\";\r\n\t\t\tthis.type = VectorBox.VECTOR3;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set the type of box, (type of data to use).\r\n\t\t *  - VectorBox.VECTOR2\r\n\t\t *  - VectorBox.VECTOR3\r\n\t\t *  - VectorBox.QUATERNION\r\n\t\t *\r\n\t\t * @method setType\r\n\t\t * @param {Number} type\r\n\t\t */\r\n\t\tsetType : function(type){\r\n\t\t\tif(this.type !== type){\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\tthis.updateInterface();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the values step.\r\n\t\t *\r\n\t\t * @method setStep\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetStep : function(value){\r\n\t\t\tvar value = String(value);\r\n\t\t\tthis.x.step = value;\r\n\t\t\tthis.y.step = value;\r\n\t\t\tthis.z.step = value;\r\n\t\t\tthis.w.step = value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the values range\r\n\t\t *\r\n\t\t * @method setRange\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max){\r\n\t\t \tvar min = String(min);\r\n\t\t \tvar max = String(max);\r\n\t\t\tthis.x.min = min;\r\n\t\t\tthis.x.max = max;\r\n\t\t\tthis.y.min = min;\r\n\t\t\tthis.y.max = max;\r\n\t\t\tthis.z.min = min;\r\n\t\t\tthis.z.max = max;\r\n\t\t\tthis.w.min = min;\r\n\t\t\tthis.w.max = max;\t\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get a value from the box.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Object} Value stored.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn {\r\n\t\t\t\tx: parseFloat(this.x.value), \r\n\t\t\t\ty: parseFloat(this.y.value), \r\n\t\t\t\tz: parseFloat(this.z.value), \r\n\t\t\t\tw: parseFloat(this.w.value), \r\n\t\t\t\torder: this.order\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value to the vector box.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} x\r\n\t\t * @param {Number} y\r\n\t\t * @param {Number} z\r\n\t\t * @param {Number} w\r\n\t\t * @param {Object} value Value\r\n\t\t */\r\n\t\tsetValue : function(x, y, z, w) {\r\n\t\t\tif(x.isVector2) {\r\n\t\t\t\tthis.x.value = x.x;\r\n\t\t\t\tthis.y.value = x.y;\r\n\t\t\t\tthis.setType(VectorBox.VECTOR2);\r\n\t\t\t} else if(x.isVector3) {\r\n\t\t\t\tthis.x.value = x.x;\r\n\t\t\t\tthis.y.value = x.y;\r\n\t\t\t\tthis.z.value = x.z;\r\n\t\t\t\tthis.setType(VectorBox.VECTOR3);\r\n\t\t\t} else if(x.isEuler) {\r\n\t\t\t\tthis.x.value = x.x;\r\n\t\t\t\tthis.y.value = x.y;\r\n\t\t\t\tthis.z.value = x.z;\r\n\t\t\t\tthis.order = x.order;\r\n\t\t\t\tthis.setType(VectorBox.VECTOR3);\r\n\t\t\t} else if(x.isQuaternion) {\r\n\t\t\t\tthis.x.value = x.x;\r\n\t\t\t\tthis.y.value = x.y;\r\n\t\t\t\tthis.z.value = x.z;\r\n\t\t\t\tthis.w.value = x.w;\r\n\t\t\t\tthis.setType(VectorBox.QUATERNION);\r\n\t\t\t} else \t{\r\n\t\t\t\tthis.x.value = x;\r\n\t\t\t\tthis.y.value = y;\r\n\t\t\t\tthis.z.value = (z !== undefined) ? z : 0;\r\n\t\t\t\tthis.w.value = (w !== undefined) ? w : 0;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis.x.onchange = onChange;\r\n\t\t\tthis.y.onchange = onChange;\r\n\t\t\tthis.z.onchange = onChange;\r\n\t\t\tthis.w.onchange = onChange;\r\n\t\t},\r\n\r\n\t\t_updateSize : function() {\r\n\t\t\tWidget.prototype._updateSize.call(this);\r\n\t\t\t\r\n\t\t\tvar sizeX = Math.round((this.size.x - this.type * 15) / this.type);\r\n\t\t\tvar sizeY = this.size.y + \"px\";\r\n\r\n\t\t\tthis.xText.style.height = sizeY;\r\n\t\t\tthis.xText.style.lineHeight = sizeY;\r\n\t\t\tthis.x.style.width = sizeX + \"px\";\r\n\r\n\t\t\tthis.yText.style.left = (15 + sizeX) + \"px\";\r\n\t\t\tthis.yText.style.height = sizeY;\r\n\t\t\tthis.yText.style.lineHeight = sizeY;\r\n\t\t\tthis.y.style.left = (30 + sizeX) + \"px\";\r\n\t\t\tthis.y.style.width = sizeX + \"px\";\r\n\r\n\t\t\tif(this.type >= VectorBox.VECTOR3){\r\n\t\t\t\tthis.zText.style.left = (30 + (2 * sizeX)) + \"px\";\r\n\t\t\t\tthis.zText.style.height = sizeY;\r\n\t\t\t\tthis.zText.style.lineHeight = sizeY;\r\n\t\t\t\tthis.z.style.left = (45 + (2 * sizeX)) + \"px\";\r\n\t\t\t\tthis.z.style.width = sizeX + \"px\";\r\n\r\n\t\t\t\tif(this.type === VectorBox.QUATERNION){\r\n\t\t\t\t\tthis.wText.style.left = (45 + (3 * sizeX)) + \"px\";\r\n\t\t\t\t\tthis.wText.style.height = sizeY;\r\n\t\t\t\t\tthis.wText.style.lineHeight = sizeY;\r\n\t\t\t\t\tthis.w.style.left = (60 + (3 * sizeX)) + \"px\";\r\n\t\t\t\t\tthis.w.style.width = sizeX + \"px\";\r\n\r\n\t\t\t\t\tthis.zText.style.visibility = \"visible\";\r\n\t\t\t\t\tthis.z.style.visibility = \"visible\";\r\n\t\t\t\t\tthis.w.style.visibility = \"visible\";\r\n\t\t\t\t\tthis.wText.style.visibility = \"visible\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.zText.style.visibility = \"visible\";\r\n\t\t\t\t\tthis.z.style.visibility = \"visible\";\r\n\t\t\t\t\tthis.w.style.visibility = \"hidden\";\r\n\t\t\t\t\tthis.wText.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.z.style.visibility = \"hidden\";\r\n\t\t\t\tthis.zText.style.visibility = \"hidden\";\r\n\t\t\t\tthis.w.style.visibility = \"hidden\";\r\n\t\t\t\tthis.wText.style.visibility = \"hidden\";\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tVectorBox.VECTOR2 = 2;\r\n\tVectorBox.VECTOR3 = 3;\r\n\tVectorBox.QUATERNION = 4;\r\n\r\n\treturn numerics.VectorBox = VectorBox;\r\n});\ndefine('skylark-widgets-numerics/main',[\r\n\t\"./numerics\",\r\n\t\"./NumberBox\",\r\n\t\"./NumberRow\",\r\n\t\"./Slider\",\r\n\t\"./VectorBox\"\r\n],function(numerics){\r\n\treturn numerics;\r\n});\ndefine('skylark-widgets-numerics', ['skylark-widgets-numerics/main'], function (main) { return main; });\n\n"]}