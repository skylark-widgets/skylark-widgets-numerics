{"version":3,"sources":["skylark-widgets-numerics.js"],"names":["define","skylark","attach","Widget","numerics","NumberBox","inherit","_construct","parent","prototype","call","this","skin","getSkin","_elm","type","step","style","backgroundColor","boxColor","color","textColor","outline","borderStyle","boxSizing","textIndent","borderRadius","boxShadow","MozAppearance","webkitAppearance","appearance","setDisabled","disabled","setRange","min","max","String","setStep","value","setOnChange","onChange","onchange","setValue","getValue","Number","parseFloat","_updateVisibility","visibility","visible","TextPane","values","labelSize","i","length","input","addValue","label","text","setText","push","_updateSize","width","Math","round","size","x","position","set","y","updateInterface","NumberRow","eventer","Slider","overflow","self","document","createElement","display","justifyContent","alignItems","zIndex","border","barColor","borderColor","body","appendChild","textValue","createTextNode","onmousemove","event","height","left","clientX","top","clientY","onmouseout","track","audioTrack","cursor","progress","pointerEvents","audioProgress","scrubber","audioScrubber","mouseStart","valueStart","on","widnow","delta","pageX","window","onmousedown","manager","create","stopPropagation","percentage","layerX","remainder","stepVal","split","precision","substr","_updateValue","data","destroy","contains","removeChild","createInput","Editor","theme","xText","textAlign","verticalAlign","yText","zText","z","wText","w","order","VectorBox","VECTOR3","setType","_updateInterface","isVector2","VECTOR2","isVector3","isEuler","isQuaternion","QUATERNION","undefined","sizeX","sizeY","lineHeight","main"],"mappings":"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","file":"../skylark-widgets-numerics.js","sourcesContent":["define('skylark-widgets-numerics/numerics',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark) {\r\n\tvar numerics = {};\r\n\r\n\treturn skylark.attach(\"widgets.numerics\",numerics);\r\n\r\n});\r\n\r\n\ndefine('skylark-widgets-numerics/NumberBox',[\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(Widget,numerics){\r\n\t//TODO r20200514 lwf\r\n\t\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Number input element.\r\n\t * \r\n\t * @class NumberBox\r\n\t * @extends {Component}\r\n\t * @param {Component} parent Parent element.\r\n\t */\r\n\tvar NumberBox = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"input\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.type = \"number\";\r\n\t\t\tthis._elm.step = \"0.1\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.boxColor;\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.outline = \"none\";\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.textIndent = \"4px\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.boxShadow = \"none\";\r\n\t\t\tthis._elm.style.MozAppearance = \"textfield\";\r\n\t\t\tthis._elm.style.webkitAppearance = \"caret\";\r\n\t\t\tthis._elm.style.appearance = \"textfield\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the disabled state of the element.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {Boolean} disabled\r\n\t\t */\r\n\t\tsetDisabled : function(disabled) {\r\n\t\t\tthis._elm.disabled = disabled;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number range.\r\n\t\t *\r\n\t\t * @methos setRange\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t\tthis._elm.min = String(min);\r\n\t\t\tthis._elm.max = String(max);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number step.\r\n\t\t *\r\n\t\t * @method setStep\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetStep : function(value) {\r\n\t\t\tthis._elm.step = String(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis._elm.onchange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetValue : function(value) \t{\r\n\t\t\tthis._elm.value = value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @return {Object} Value stored in the input element.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn Number.parseFloat(this._elm.value);\r\n\t\t},\r\n\r\n\t\t_updateVisibility : function() \t{\r\n\t\t\tthis._elm.style.visibility = this.visible ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.NumberBox = NumberBox;\r\n});\ndefine('skylark-widgets-numerics/NumberRow',[\n\t\"skylark-widgets-base/Widget\",\n\t\"skylark-widgets-base/TextPane\",\n\t\"./numerics\",\n\t\"./NumberBox\"\n],function(Widget,TextPane,numerics,NumberBox){\n\t\"use strict\";\n\n\t/**\n\t * The vector array box represents multiple numeric variables as a vector.\n\t *\n\t * @class NumberRow\n\t * @extends {Widget}\n\t */\n\tvar NumberBox = Widget.inherit({\n\n\t\t_construct : function (parent) {\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\n\n\t\t\t/**\n\t\t\t * Array with the values objects.\n\t\t\t *\n\t\t\t * Each value object is composed of {label:label, input:input}\n\t\t\t *\n\t\t\t * @attribute values\n\t\t\t * @type {Array}\n\t\t\t */\n\t\t\tthis.values = [];\n\n\t\t\t/**\n\t\t\t * Label size in px.\n\t\t\t *\n\t\t\t * @attribute labelSize\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.labelSize = 15;\n\t\t},\n\n\t\t/**\n\t\t * Set the values step.\n\t\t *\n\t\t * @method setStep\n\t\t * @param {Number} value\n\t\t */\n\t\tsetStep : function(value) {\n\t\t\tvar value = String(value);\n\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\n\t\t\t\tthis.values[i].input.setStep(value);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Set the values range\n\t\t *\n\t\t * @method setRange\n\t\t * @param {Number} min\n\t\t * @param {Number} max\n\t\t */\n\t\tsetRange : function(min, max) {\n\t\t \tvar min = String(min);\n\t\t \tvar max = String(max);\n\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\n\t\t\t\tthis.values[i].input.setRange(min, max);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add value to the box\n\t\t *\n\t\t * @method addValue\n\t\t * @param {String} label Label of de attribute.\n\t\t * @return {NumberBox} The input number box created for this value.\n\t\t */\n\t\taddValue : function(label) {\n\t\t\tvar input = new NumberBox(this);\n\n\t\t\tvar text = new TextPane(this);\n\t\t\ttext.setText(label);\t\n\n\t\t\tthis.values.push({\n\t\t\t\tlabel: text,\n\t\t\t\tinput: input\n\t\t\t});\n\n\t\t\treturn input;\n\t\t},\n\n\t\t_updateSize : function() {\n\t\t\tWidget.prototype._updateSize.call(this);\n\t\t\t\n\t\t\tvar width = Math.round((this.size.x - this.values.length * this.labelSize) / this.values.length);\n\t\t\tvar x = 0;\n\t\t\t\n\t\t\tfor(var i = 0; i < this.values.length; i++)\n\t\t\t{\n\t\t\t\tvar label = this.values[i].label;\n\t\t\t\tlabel.position.set(x, 0);\n\t\t\t\tlabel.size.set(this.labelSize, this.size.y);\n\t\t\t\tlabel.updateInterface();\n\n\t\t\t\tvar input = this.values[i].input;\n\t\t\t\tinput.position.set(x + this.labelSize, 0);\n\t\t\t\tinput.size.set(width, this.size.y);\n\t\t\t\tinput.updateInterface();\n\n\t\t\t\tx += width + this.labelSize;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn numerics.NumberRow = NumberRow;\n});\ndefine('skylark-widgets-numerics/Slider',[\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(eventer,Widget,numerics){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Slider widget is used to select a numeric value using a visual slider bar.\r\n\t * \r\n\t * @class Slider\r\n\t * @extends {Widget}\r\n\t * @param {Widget} parent Parent widget.\r\n\t */\r\n\tvar Slider = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.call(this, parent, \"div\");\r\n\r\n\t\t\tthis._elm.style.overflow = \"visible\";\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tvar self = this;\r\n\r\n\t\t\t//Text\r\n\t\t\tthis.text = document.createElement(\"div\");\r\n\t\t\tthis.text.style.position = \"absolute\";\r\n\t\t\tthis.text.style.display = \"none\";\r\n\t\t\tthis.text.style.justifyContent = \"center\";\r\n\t\t\tthis.text.style.alignItems = \"center\";\r\n\t\t\tthis.text.style.zIndex = \"10000\";\r\n\t\t\tthis.text.style.border = \"3px solid\";\r\n\t\t\tthis.text.style.borderRadius = \"5px\";\r\n\r\n\t\t\t//this.text.style.color = Editor.theme.textColor;\r\n\t\t\t//this.text.style.backgroundColor = Editor.theme.barColor;\r\n\t\t\t//this.text.style.borderColor = Editor.theme.barColor;\t\r\n\t\t\tthis.text.style.color = skin.textColor;\r\n\t\t\tthis.text.style.backgroundColor = skin.barColor;\r\n\t\t\tthis.text.style.borderColor = skin.barColor;\t\r\n\r\n\t\t\tdocument.body.appendChild(this.text);\r\n\r\n\t\t\t//Text value\r\n\t\t\tthis.textValue = document.createTextNode(\"\");\r\n\t\t\tthis.text.appendChild(this.textValue);\r\n\r\n\t\t\t//Mouse mouse move event\r\n\t\t\tthis._elm.onmousemove = function(event)\r\n\t\t\t{\r\n\t\t\t\tself.text.style.display = \"flex\";\r\n\t\t\t\tself.text.style.width = \"fit-content\";\r\n\t\t\t\tself.text.style.height = \"fit-content\";\r\n\t\t\t\tself.text.style.left = event.clientX + \"px\";\r\n\t\t\t\tself.text.style.top = (event.clientY - 30) + \"px\";\r\n\t\t\t};\r\n\r\n\t\t\t//Mouse out event\r\n\t\t\tthis._elm.onmouseout = function()\r\n\t\t\t{\r\n\t\t\t\tself.text.style.display = \"none\";\r\n\t\t\t};\r\n\r\n\t\t\t//Track\r\n\t\t\tthis.track = document.createElement(\"div\");\r\n\t\t\tthis.track.style.position = \"absolute\";\r\n\t\t\t//this.track.style.backgroundColor = Editor.theme.audioTrack;\r\n\t\t\tthis.track.style.backgroundColor = skin.audioTrack;\r\n\t\t\tthis.track.style.cursor = \"pointer\";\r\n\t\t\tthis.track.style.left = \"0px\";\r\n\t\t\tthis.track.style.width = \"100%\";\r\n\t\t\tthis.track.style.top = \"25%\";\r\n\t\t\tthis.track.style.height = \"50%\";\r\n\t\t\tthis._elm.appendChild(this.track);\r\n\r\n\t\t\t//Progress\r\n\t\t\tthis.progress = document.createElement(\"div\");\r\n\t\t\tthis.progress.style.pointerEvents = \"none\";\r\n\t\t\tthis.progress.style.position = \"absolute\";\r\n\t\t\t//this.progress.style.backgroundColor = Editor.theme.audioProgress;\r\n\t\t\tthis.progress.style.backgroundColor = skin.audioProgress;\r\n\t\t\tthis.progress.style.height = \"100%\";\r\n\t\t\tthis.track.appendChild(this.progress);\r\n\r\n\t\t\t//Scrubber\r\n\t\t\tthis.scrubber = document.createElement(\"div\");\r\n\t\t\tthis.scrubber.style.position = \"absolute\";\r\n\t\t\t//this.scrubber.style.backgroundColor = Editor.theme.audioScrubber;\r\n\t\t\tthis.scrubber.style.backgroundColor = skin.audioScrubber;\r\n\t\t\tthis.scrubber.style.cursor = \"pointer\";\r\n\t\t\tthis.scrubber.style.height = \"160%\";\r\n\t\t\tthis.scrubber.style.top = \"-25%\";\r\n\t\t\tthis.scrubber.style.width = \"6px\";\r\n\t\t\tthis.track.appendChild(this.scrubber);\r\n\r\n\t\t\t/**\r\n\t\t\t * Value stored in the slider.\r\n\t\t\t *\r\n\t\t\t * @property value\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.value = 0.0;\r\n\r\n\t\t\t/**\r\n\t\t\t * On change callback function.\r\n\t\t\t *\r\n\t\t\t * @property onChange\r\n\t\t\t * @type {Function}\r\n\t\t\t */\r\n\t\t\tthis.onChange = null;\r\n\r\n\t\t\t//Range\r\n\t\t\tthis.min = 1.0;\r\n\t\t\tthis.max = 2.0;\r\n\t\t\tthis.step = null;\r\n\r\n\t\t\t//Drag control\r\n\t\t\tthis.mouseStart = 0;\r\n\t\t\tthis.valueStart = 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * Event manager to handle window events.\r\n\t\t\t *\r\n\t\t\t * @property manager\r\n\t\t\t * @type {EventManager}\r\n\t\t\t */\r\n\t\t\t//this.manager = new EventManager();\r\n\t\t\t//this.manager.add(window, \"mousemove\", function(event)\r\n\t\t\teventer.on(widnow,\"mousemove\", function(event)\r\n\t\t\t{\r\n\t\t\t\tvar delta = (event.pageX - self.mouseStart) / (self.size.x);\r\n\t\t\t\tvar value = self.valueStart + delta * (self.max - self.min);\r\n\t\t\t\tself.setValue(value);\r\n\r\n\t\t\t\tif (self.onChange !== null) {\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//this.manager.add(window, \"mouseup\", function(event)\r\n\t\t\teventer.on(window, \"mouseup\", function(event)\r\n\t\t\t{\t\r\n\t\t\t\t//self.manager.destroy();\r\n\t\t\t});\r\n\r\n\t\t\tthis.scrubber.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t\tself.mouseStart = event.pageX;\r\n\t\t\t\tself.valueStart = self.value;\r\n\t\t\t\tself.manager.create();\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t};\r\n\r\n\t\t\tthis.track.onmousedown = function(event)\r\n\t\t\t{\r\n\t\t\t\tvar percentage = (event.layerX / self.size.x);\r\n\r\n\t\t\t\tself.setValue(percentage * (self.max - self.min) + self.min);\r\n\t\t\t\tself.progress.style.width = (percentage * 100) + \"%\";\r\n\t\t\t\tself.scrubber.style.left = self.progress.style.width;\r\n\t\t\t\tself.scrubber.onmousedown(event);\r\n\r\n\t\t\t\tif(self.onChange !== null) {\r\n\t\t\t\t\tself.onChange(self.value);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set if widget is disabled.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {Boolean} value.\r\n\t\t */\r\n\t\tsetDisabled : function(value) {\r\n\t\t\t//TODO\r\n\t\t},\r\n\r\n\t\t//Set slider min step\r\n\t\tsetStep : function(step) {\r\n\t\t\tthis.step = step;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value range of the slider.\r\n\t\t *\r\n\t\t * @method setRange.\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t\tthis.min = min;\r\n\t\t\tthis.max = max;\r\n\t\t},\r\n\r\n\t\t/** \r\n\t\t * Set onchange callback.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t * @param {String} name Graph name.\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis.onChange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set Slider value.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetValue : function(value) {\r\n\t\t\tif(value < this.min) {\r\n\t\t\t\tvalue = this.min;\r\n\t\t\t} else if(value > this.max) {\r\n\t\t\t\tvalue = this.max;\r\n\t\t\t}\r\n\r\n\t\t\tif(this.step !== null) {\r\n\t\t\t\tvar remainder = value % this.step;\r\n\r\n\t\t\t\tvalue -= remainder;\r\n\t\t\t\tif(remainder > this.step / 2)\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue += this.step;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//Check for precision problems\r\n\t\t\t\tvar stepVal = String(this.step).split(\".\");\r\n\t\t\t\tif(stepVal.length > 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar precision = stepVal[1].length;\r\n\t\t\t\t\tvar values = String(value).split(\".\");\r\n\t\t\t\t\tif(values.length > 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue = Number.parseFloat(values[0] + \".\" + values[1].substr(0, precision));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.value = value;\r\n\t\t\tthis._updateValue();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get Slider value.\r\n\t\t *\r\n\t\t * @method getValue\r\n\t\t * @return {Number} Value of the slider.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn this.value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Update the DOM elements to represent the value.\r\n\t\t *\r\n\t\t * @method updateValue\r\n\t\t */\r\n\t\t_updateValue : function() {\r\n\t\t\tvar progress = ((this.value - this.min) / (this.max - this.min)) * 100;\r\n\r\n\t\t\tthis.progress.style.width = progress + \"%\";\r\n\t\t\tthis.scrubber.style.left = progress + \"%\";\r\n\t\t\tthis.textValue.data = this.value;\r\n\t\t},\r\n\r\n\t\tdestroy : function() {\r\n\t\t\tWidget.prototype.destroy.call(this);\r\n\t\t\t\r\n\t\t\tif(document.body.contains(this.text))\r\n\t\t\t{\r\n\t\t\t\tdocument.body.removeChild(this.text);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.Slider = Slider;\r\n});\ndefine('skylark-widgets-numerics/VectorBox',[\n\t\"skylark-widgets-base/Widget\",\n\t\"./numerics\"\n],function(Widget,numerics){\n\n\t//TODO r20200514 lwf\n\t\n\t\"use strict\";\n\n\t/**\n\t * The vector box is used to represent Vector2, Vector3, Vector4 and Euler values.\n\t *\n\t * @class VectorBox\n\t * @extends {Widget}\n\t */\n\tvar NumberBox = Widget.inherit({\n\n\t\t_construct : function (parent) {\n\t\t\tWidget.call(this, parent, \"div\");\n\n\t\t\t//X Text\n\t\t\tthis.xText = document.createElement(\"div\");\n\t\t\tthis.xText.style.position = \"absolute\";\n\t\t\tthis.xText.style.width = \"15px\";\n\t\t\tthis.xText.style.textAlign = \"center\";\n\t\t\tthis.xText.style.verticalAlign = \"middle\";\n\t\t\tthis.xText.appendChild(document.createTextNode(\"X\"));\n\t\t\tthis._elm.appendChild(this.xText);\n\n\t\t\tfunction createInput()\n\t\t\t{\n\t\t\t\tvar input = document.createElement(\"input\");\n\t\t\t\tinput.type = \"number\";\n\t\t\t\tinput.style.backgroundColor = Editor.theme.boxColor;\n\t\t\t\tinput.style.color = Editor.theme.textColor;\n\t\t\t\tinput.style.borderStyle = \"none\";\n\t\t\t\tinput.style.position = \"absolute\";\n\t\t\t\tinput.style.boxSizing = \"border-box\";\n\t\t\t\tinput.style.textIndent = \"4px\";\n\t\t\t\tinput.style.borderRadius = \"4px\";\n\t\t\t\tinput.style.outline = \"none\";\n\t\t\t\tinput.style.MozAppearance = \"textfield\";\n\t\t\t\tinput.style.webkitAppearance = \"caret\";\n\t\t\t\tinput.style.appearance = \"textfield\";\n\t\t\t\treturn input;\n\t\t\t}\n\n\t\t\t//X\n\t\t\tthis.x = createInput();\n\t\t\tthis.x.style.left = \"15px\";\n\t\t\tthis._elm.appendChild(this.x);\n\n\t\t\t//Y Text\n\t\t\tthis.yText = document.createElement(\"div\");\n\t\t\tthis.yText.style.position = \"absolute\";\n\t\t\tthis.yText.style.width = \"15px\";\n\t\t\tthis.yText.style.textAlign = \"center\";\n\t\t\tthis.yText.style.verticalAlign = \"middle\";\n\t\t\tthis.yText.appendChild(document.createTextNode(\"Y\"));\n\t\t\tthis._elm.appendChild(this.yText);\n\n\t\t\t//Y\n\t\t\tthis.y = createInput();\n\t\t\tthis._elm.appendChild(this.y);\n\n\t\t\t//Z Text\n\t\t\tthis.zText = document.createElement(\"div\");\n\t\t\tthis.zText.style.position = \"absolute\";\n\t\t\tthis.zText.style.width = \"15px\";\n\t\t\tthis.zText.style.textAlign = \"center\";\n\t\t\tthis.zText.style.verticalAlign = \"middle\";\n\t\t\tthis.zText.appendChild(document.createTextNode(\"Z\"));\n\t\t\tthis._elm.appendChild(this.zText);\n\n\t\t\t//Z\n\t\t\tthis.z = createInput();\n\t\t\tthis._elm.appendChild(this.z);\n\n\t\t\t//W Text\n\t\t\tthis.wText = document.createElement(\"div\");\n\t\t\tthis.wText.style.position = \"absolute\";\n\t\t\tthis.wText.style.width = \"15px\";\n\t\t\tthis.wText.style.textAlign = \"center\";\n\t\t\tthis.wText.style.verticalAlign = \"middle\";\n\t\t\tthis.wText.appendChild(document.createTextNode(\"W\"));\n\t\t\tthis._elm.appendChild(this.wText);\n\n\t\t\t//W\n\t\t\tthis.w = createInput();\n\t\t\tthis._elm.appendChild(this.w);\n\n\t\t\t//Order\n\t\t\tthis.order = \"XYZ\";\n\t\t\tthis.type = VectorBox.VECTOR3;\n\t\t},\n\n\n\t\t/**\n\t\t * Set the type of box, (type of data to use).\n\t\t *  - VectorBox.VECTOR2\n\t\t *  - VectorBox.VECTOR3\n\t\t *  - VectorBox.QUATERNION\n\t\t *\n\t\t * @method setType\n\t\t * @param {Number} type\n\t\t */\n\t\tsetType : function(type){\n\t\t\tif(this.type !== type){\n\t\t\t\tthis.type = type;\n\t\t\t\tthis._updateInterface();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Set the values step.\n\t\t *\n\t\t * @method setStep\n\t\t * @param {Number} value\n\t\t */\n\t\tsetStep : function(value){\n\t\t\tvar value = String(value);\n\t\t\tthis.x.step = value;\n\t\t\tthis.y.step = value;\n\t\t\tthis.z.step = value;\n\t\t\tthis.w.step = value;\n\t\t},\n\n\t\t/**\n\t\t * Set the values range\n\t\t *\n\t\t * @method setRange\n\t\t * @param {Number} min\n\t\t * @param {Number} max\n\t\t */\n\t\tsetRange : function(min, max){\n\t\t \tvar min = String(min);\n\t\t \tvar max = String(max);\n\t\t\tthis.x.min = min;\n\t\t\tthis.x.max = max;\n\t\t\tthis.y.min = min;\n\t\t\tthis.y.max = max;\n\t\t\tthis.z.min = min;\n\t\t\tthis.z.max = max;\n\t\t\tthis.w.min = min;\n\t\t\tthis.w.max = max;\t\n\t\t},\n\n\t\t/**\n\t\t * Get a value from the box.\n\t\t *\n\t\t * @method getValue\n\t\t * @return {Object} Value stored.\n\t\t */\n\t\tgetValue : function() {\n\t\t\treturn {\n\t\t\t\tx: parseFloat(this.x.value), \n\t\t\t\ty: parseFloat(this.y.value), \n\t\t\t\tz: parseFloat(this.z.value), \n\t\t\t\tw: parseFloat(this.w.value), \n\t\t\t\torder: this.order\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Set value to the vector box.\n\t\t *\n\t\t * @method setValue\n\t\t * @param {Number} x\n\t\t * @param {Number} y\n\t\t * @param {Number} z\n\t\t * @param {Number} w\n\t\t * @param {Object} value Value\n\t\t */\n\t\tsetValue : function(x, y, z, w) {\n\t\t\tif(x.isVector2) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.setType(VectorBox.VECTOR2);\n\t\t\t} else if(x.isVector3) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.z.value = x.z;\n\t\t\t\tthis.setType(VectorBox.VECTOR3);\n\t\t\t} else if(x.isEuler) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.z.value = x.z;\n\t\t\t\tthis.order = x.order;\n\t\t\t\tthis.setType(VectorBox.VECTOR3);\n\t\t\t} else if(x.isQuaternion) {\n\t\t\t\tthis.x.value = x.x;\n\t\t\t\tthis.y.value = x.y;\n\t\t\t\tthis.z.value = x.z;\n\t\t\t\tthis.w.value = x.w;\n\t\t\t\tthis.setType(VectorBox.QUATERNION);\n\t\t\t} else \t{\n\t\t\t\tthis.x.value = x;\n\t\t\t\tthis.y.value = y;\n\t\t\t\tthis.z.value = (z !== undefined) ? z : 0;\n\t\t\t\tthis.w.value = (w !== undefined) ? w : 0;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Set onchange callback, called after changes.\n\t\t *\n\t\t * @method setOnChange\n\t\t * @param {Function} onChange\n\t\t */\n\t\tsetOnChange : function(onChange) {\n\t\t\tthis.x.onchange = onChange;\n\t\t\tthis.y.onchange = onChange;\n\t\t\tthis.z.onchange = onChange;\n\t\t\tthis.w.onchange = onChange;\n\t\t},\n\n\t\t_updateSize : function() {\n\t\t\tWidget.prototype._updateSize.call(this);\n\t\t\t\n\t\t\tvar sizeX = Math.round((this.size.x - this.type * 15) / this.type);\n\t\t\tvar sizeY = this.size.y + \"px\";\n\n\t\t\tthis.xText.style.height = sizeY;\n\t\t\tthis.xText.style.lineHeight = sizeY;\n\t\t\tthis.x.style.width = sizeX + \"px\";\n\n\t\t\tthis.yText.style.left = (15 + sizeX) + \"px\";\n\t\t\tthis.yText.style.height = sizeY;\n\t\t\tthis.yText.style.lineHeight = sizeY;\n\t\t\tthis.y.style.left = (30 + sizeX) + \"px\";\n\t\t\tthis.y.style.width = sizeX + \"px\";\n\n\t\t\tif(this.type >= VectorBox.VECTOR3){\n\t\t\t\tthis.zText.style.left = (30 + (2 * sizeX)) + \"px\";\n\t\t\t\tthis.zText.style.height = sizeY;\n\t\t\t\tthis.zText.style.lineHeight = sizeY;\n\t\t\t\tthis.z.style.left = (45 + (2 * sizeX)) + \"px\";\n\t\t\t\tthis.z.style.width = sizeX + \"px\";\n\n\t\t\t\tif(this.type === VectorBox.QUATERNION){\n\t\t\t\t\tthis.wText.style.left = (45 + (3 * sizeX)) + \"px\";\n\t\t\t\t\tthis.wText.style.height = sizeY;\n\t\t\t\t\tthis.wText.style.lineHeight = sizeY;\n\t\t\t\t\tthis.w.style.left = (60 + (3 * sizeX)) + \"px\";\n\t\t\t\t\tthis.w.style.width = sizeX + \"px\";\n\n\t\t\t\t\tthis.zText.style.visibility = \"visible\";\n\t\t\t\t\tthis.z.style.visibility = \"visible\";\n\t\t\t\t\tthis.w.style.visibility = \"visible\";\n\t\t\t\t\tthis.wText.style.visibility = \"visible\";\n\t\t\t\t}else{\n\t\t\t\t\tthis.zText.style.visibility = \"visible\";\n\t\t\t\t\tthis.z.style.visibility = \"visible\";\n\t\t\t\t\tthis.w.style.visibility = \"hidden\";\n\t\t\t\t\tthis.wText.style.visibility = \"hidden\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.z.style.visibility = \"hidden\";\n\t\t\t\tthis.zText.style.visibility = \"hidden\";\n\t\t\t\tthis.w.style.visibility = \"hidden\";\n\t\t\t\tthis.wText.style.visibility = \"hidden\";\n\t\t\t}\n\t\t}\n\t});\n\n\tVectorBox.VECTOR2 = 2;\n\tVectorBox.VECTOR3 = 3;\n\tVectorBox.QUATERNION = 4;\n\n\treturn numerics.VectorBox = VectorBox;\n});\ndefine('skylark-widgets-numerics/main',[\r\n\t\"./numerics\",\r\n\t\"./NumberBox\",\r\n\t\"./NumberRow\",\r\n\t\"./Slider\",\r\n\t\"./VectorBox\"\r\n],function(numerics){\r\n\treturn numerics;\r\n});\ndefine('skylark-widgets-numerics', ['skylark-widgets-numerics/main'], function (main) { return main; });\n\n"]}