{"version":3,"sources":["NumberRow.js"],"names":["define","Widget","TextPane","numerics","NumberBox","NumberRow","inherit","_construct","parent","prototype","call","this","values","labelSize","setStep","value","String","i","length","input","setRange","min","max","addValue","label","css","text","setText","push","updateSize","width","Math","round","size","x","position","set","y","updateInterface"],"mappings":";;;;;;;AAAAA,QACC,8BACA,gCACA,aACA,eACC,SAASC,EAAOC,EAASC,EAASC,GACnC,aAQA,IAAIC,EAAYJ,EAAOK,SAEtBC,WAAa,SAAUC,GACtBP,EAAOQ,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,OAU/CG,KAAKC,UAQLD,KAAKE,UAAY,IASlBC,QAAU,SAASC,GACdA,EAAQC,OAAOD,GAEnB,IAFA,IAEQE,EAAI,EAAGA,EAAIN,KAAKC,OAAOM,OAAQD,IACtCN,KAAKC,OAAOK,GAAGE,MAAML,QAAQC,IAW/BK,SAAW,SAASC,EAAKC,GACnBD,EAAML,OAAOK,GACbC,EAAMN,OAAOM,GAElB,IAHC,IAGOL,EAAI,EAAGA,EAAIN,KAAKC,OAAOM,OAAQD,IACtCN,KAAKC,OAAOK,GAAGE,MAAMC,SAASC,EAAKC,IAWrCC,SAAW,SAASC,GACnB,IAAIL,EAAQ,IAAIf,EAAUO,MAC1BQ,EAAMM,IAAI,WAAW,YAErB,IAAIC,EAAO,IAAIxB,EAASS,MASxB,OARAe,EAAKD,IAAI,WAAW,YACpBC,EAAKC,QAAQH,GAEbb,KAAKC,OAAOgB,MACXJ,MAAOE,EACPP,MAAOA,IAGDA,GAGRU,WAAa,WACZ5B,EAAOQ,UAAUoB,WAAWnB,KAAKC,MAKjC,IAHA,IAAImB,EAAQC,KAAKC,OAAOrB,KAAKsB,KAAKC,EAAIvB,KAAKC,OAAOM,OAASP,KAAKE,WAAaF,KAAKC,OAAOM,QACrFgB,EAAI,EAEAjB,EAAI,EAAGA,EAAIN,KAAKC,OAAOM,OAAQD,IACvC,CACC,IAAIO,EAAQb,KAAKC,OAAOK,GAAGO,MAC3BA,EAAMW,SAASC,IAAIF,EAAG,GACtBV,EAAMS,KAAKG,IAAIzB,KAAKE,UAAWF,KAAKsB,KAAKI,GACzCb,EAAMc,kBAEN,IAAInB,EAAQR,KAAKC,OAAOK,GAAGE,MAC3BA,EAAMgB,SAASC,IAAIF,EAAIvB,KAAKE,UAAW,GACvCM,EAAMc,KAAKG,IAAIN,EAAOnB,KAAKsB,KAAKI,GAChClB,EAAMmB,kBAENJ,GAAKJ,EAAQnB,KAAKE,cAKrB,OAAOV,EAASE,UAAYA","file":"../NumberRow.js","sourcesContent":["define([\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"skylark-widgets-base/TextPane\",\r\n\t\"./numerics\",\r\n\t\"./NumberBox\"\r\n],function(Widget,TextPane,numerics,NumberBox){\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * The vector array box represents multiple numeric variables as a vector.\r\n\t *\r\n\t * @class NumberRow\r\n\t * @extends {Widget}\r\n\t */\r\n\tvar NumberRow = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"div\");\r\n\r\n\t\t\t/**\r\n\t\t\t * Array with the values objects.\r\n\t\t\t *\r\n\t\t\t * Each value object is composed of {label:label, input:input}\r\n\t\t\t *\r\n\t\t\t * @attribute values\r\n\t\t\t * @type {Array}\r\n\t\t\t */\r\n\t\t\tthis.values = [];\r\n\r\n\t\t\t/**\r\n\t\t\t * Label size in px.\r\n\t\t\t *\r\n\t\t\t * @attribute labelSize\r\n\t\t\t * @type {Number}\r\n\t\t\t */\r\n\t\t\tthis.labelSize = 15;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the values step.\r\n\t\t *\r\n\t\t * @method setStep\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetStep : function(value) {\r\n\t\t\tvar value = String(value);\r\n\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\r\n\t\t\t\tthis.values[i].input.setStep(value);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the values range\r\n\t\t *\r\n\t\t * @method setRange\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t \tvar min = String(min);\r\n\t\t \tvar max = String(max);\r\n\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\t{\r\n\t\t\t\tthis.values[i].input.setRange(min, max);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Add value to the box\r\n\t\t *\r\n\t\t * @method addValue\r\n\t\t * @param {String} label Label of de attribute.\r\n\t\t * @return {NumberBox} The input number box created for this value.\r\n\t\t */\r\n\t\taddValue : function(label) {\r\n\t\t\tvar input = new NumberBox(this);\r\n\t\t\tinput.css(\"position\",\"absolute\");\r\n\r\n\t\t\tvar text = new TextPane(this);\r\n\t\t\ttext.css(\"position\",\"absolute\");\r\n\t\t\ttext.setText(label);\t\r\n\r\n\t\t\tthis.values.push({\r\n\t\t\t\tlabel: text,\r\n\t\t\t\tinput: input\r\n\t\t\t});\r\n\r\n\t\t\treturn input;\r\n\t\t},\r\n\r\n\t\tupdateSize : function() {\r\n\t\t\tWidget.prototype.updateSize.call(this);\r\n\t\t\t\r\n\t\t\tvar width = Math.round((this.size.x - this.values.length * this.labelSize) / this.values.length);\r\n\t\t\tvar x = 0;\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i < this.values.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar label = this.values[i].label;\r\n\t\t\t\tlabel.position.set(x, 0);\r\n\t\t\t\tlabel.size.set(this.labelSize, this.size.y);\r\n\t\t\t\tlabel.updateInterface();\r\n\r\n\t\t\t\tvar input = this.values[i].input;\r\n\t\t\t\tinput.position.set(x + this.labelSize, 0);\r\n\t\t\t\tinput.size.set(width, this.size.y);\r\n\t\t\t\tinput.updateInterface();\r\n\r\n\t\t\t\tx += width + this.labelSize;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.NumberRow = NumberRow;\r\n});"]}