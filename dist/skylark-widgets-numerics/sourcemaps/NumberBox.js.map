{"version":3,"sources":["NumberBox.js"],"names":["define","Widget","numerics","NumberBox","inherit","_construct","parent","prototype","call","this","skin","getSkin","_elm","type","step","style","backgroundColor","boxColor","color","textColor","outline","borderStyle","boxSizing","textIndent","borderRadius","boxShadow","MozAppearance","webkitAppearance","appearance","setDisabled","disabled","setRange","min","max","String","setStep","value","setOnChange","onChange","onchange","setValue","getValue","Number","parseFloat","updateVisibility","visibility","visible"],"mappings":";;;;;;;AAAAA,QACC,8BACA,cACC,SAASC,EAAOC,GAGjB,aASA,IAAIC,EAAYF,EAAOG,SAEtBC,WAAa,SAAUC,GACtBL,EAAOM,UAAUF,WAAWG,KAAKC,KAAMH,EAAQ,SAE/C,IAAII,EAAOD,KAAKE,UAEhBF,KAAKG,KAAKC,KAAO,SACjBJ,KAAKG,KAAKE,KAAO,MAGjBL,KAAKG,KAAKG,MAAMC,gBAAkBN,EAAKO,SACvCR,KAAKG,KAAKG,MAAMG,MAAQR,EAAKS,UAC7BV,KAAKG,KAAKG,MAAMK,QAAU,OAC1BX,KAAKG,KAAKG,MAAMM,YAAc,OAC9BZ,KAAKG,KAAKG,MAAMO,UAAY,aAC5Bb,KAAKG,KAAKG,MAAMQ,WAAa,MAC7Bd,KAAKG,KAAKG,MAAMS,aAAe,MAC/Bf,KAAKG,KAAKG,MAAMU,UAAY,OAC5BhB,KAAKG,KAAKG,MAAMW,cAAgB,YAChCjB,KAAKG,KAAKG,MAAMY,iBAAmB,QACnClB,KAAKG,KAAKG,MAAMa,WAAa,aAS9BC,YAAc,SAASC,GACtBrB,KAAKG,KAAKkB,SAAWA,GAUtBC,SAAW,SAASC,EAAKC,GACxBxB,KAAKG,KAAKoB,IAAME,OAAOF,GACvBvB,KAAKG,KAAKqB,IAAMC,OAAOD,IASxBE,QAAU,SAASC,GAClB3B,KAAKG,KAAKE,KAAOoB,OAAOE,IASzBC,YAAc,SAASC,GACtB7B,KAAKG,KAAK2B,SAAWD,GAStBE,SAAW,SAASJ,GACnB3B,KAAKG,KAAKwB,MAAQA,GASnBK,SAAW,WACV,OAAOC,OAAOC,WAAWlC,KAAKG,KAAKwB,QAGpCQ,iBAAmB,WAClBnC,KAAKG,KAAKG,MAAM8B,WAAapC,KAAKqC,QAAU,UAAY,YAI1D,OAAO5C,EAASC,UAAYA","file":"../NumberBox.js","sourcesContent":["define([\r\n\t\"skylark-widgets-base/Widget\",\r\n\t\"./numerics\"\r\n],function(Widget,numerics){\r\n\t//TODO r20200514 lwf\r\n\t\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * Number input element.\r\n\t * \r\n\t * @class NumberBox\r\n\t * @extends {Component}\r\n\t * @param {Component} parent Parent element.\r\n\t */\r\n\tvar NumberBox = Widget.inherit({\r\n\r\n\t\t_construct : function (parent) {\r\n\t\t\tWidget.prototype._construct.call(this, parent, \"input\");\r\n\r\n\t\t\tvar skin = this.getSkin();\r\n\r\n\t\t\tthis._elm.type = \"number\";\r\n\t\t\tthis._elm.step = \"0.1\";\r\n\t\t\t//this._elm.style.backgroundColor = Editor.theme.boxColor;\r\n\t\t\t//this._elm.style.color = Editor.theme.textColor;\r\n\t\t\tthis._elm.style.backgroundColor = skin.boxColor;\r\n\t\t\tthis._elm.style.color = skin.textColor;\r\n\t\t\tthis._elm.style.outline = \"none\";\r\n\t\t\tthis._elm.style.borderStyle = \"none\";\r\n\t\t\tthis._elm.style.boxSizing = \"border-box\";\r\n\t\t\tthis._elm.style.textIndent = \"4px\";\r\n\t\t\tthis._elm.style.borderRadius = \"4px\";\r\n\t\t\tthis._elm.style.boxShadow = \"none\";\r\n\t\t\tthis._elm.style.MozAppearance = \"textfield\";\r\n\t\t\tthis._elm.style.webkitAppearance = \"caret\";\r\n\t\t\tthis._elm.style.appearance = \"textfield\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the disabled state of the element.\r\n\t\t *\r\n\t\t * @method setDisabled\r\n\t\t * @param {Boolean} disabled\r\n\t\t */\r\n\t\tsetDisabled : function(disabled) {\r\n\t\t\tthis._elm.disabled = disabled;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number range.\r\n\t\t *\r\n\t\t * @methos setRange\r\n\t\t * @param {Number} min\r\n\t\t * @param {Number} max\r\n\t\t */\r\n\t\tsetRange : function(min, max) {\r\n\t\t\tthis._elm.min = String(min);\r\n\t\t\tthis._elm.max = String(max);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set number step.\r\n\t\t *\r\n\t\t * @method setStep\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetStep : function(value) {\r\n\t\t\tthis._elm.step = String(value);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set onchange callback, called after changes.\r\n\t\t *\r\n\t\t * @method setOnChange\r\n\t\t * @param {Function} onChange\r\n\t\t */\r\n\t\tsetOnChange : function(onChange) {\r\n\t\t\tthis._elm.onchange = onChange;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @param {Number} value\r\n\t\t */\r\n\t\tsetValue : function(value) \t{\r\n\t\t\tthis._elm.value = value;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Get value stored in the input element.\r\n\t\t *\r\n\t\t * @method setValue\r\n\t\t * @return {Object} Value stored in the input element.\r\n\t\t */\r\n\t\tgetValue : function() {\r\n\t\t\treturn Number.parseFloat(this._elm.value);\r\n\t\t},\r\n\r\n\t\tupdateVisibility : function() \t{\r\n\t\t\tthis._elm.style.visibility = this.visible ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\t});\r\n\r\n\treturn numerics.NumberBox = NumberBox;\r\n});"]}